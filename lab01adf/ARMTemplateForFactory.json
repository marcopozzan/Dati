{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "lab01adf"
		},
		"ABS_Weather_fm_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ABS_Weather_fm'"
		},
		"ADLS_CSV_ez_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLS_CSV_ez'"
		},
		"ADLS_Inventory_parts_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLS_Inventory_parts'"
		},
		"ADLS_Lego_tw_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLS_Lego_tw'"
		},
		"ADLS_lab01_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLS_lab01'"
		},
		"ADLS_lab01_MR_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLS_lab01_MR'"
		},
		"ADLS_lego_MM_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLS_lego_MM'"
		},
		"ADLS_lego_ma_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLS_lego_ma'"
		},
		"ADLS_lego_mp_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLS_lego_mp'"
		},
		"AzStorage_stagingMB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzStorage_stagingMB'"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage2'"
		},
		"AzureDataLakeStoragelt_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStoragelt'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"BlobStorage_MB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'BlobStorage_MB'"
		},
		"BlobStorage_fm_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'BlobStorage_fm'"
		},
		"Data_ADLS_Lego_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'Data_ADLS_Lego'"
		},
		"LocalDBToAzureDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LocalDBToAzureDB'"
		},
		"blobby_tw_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'blobby_tw'"
		},
		"bloblab01_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'bloblab01'"
		},
		"blobstorage_DC_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'blobstorage_DC'"
		},
		"blobstorage_ez_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'blobstorage_ez'"
		},
		"blobstorage_gp_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'blobstorage_gp'"
		},
		"blobstorage_lt_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'blobstorage_lt'"
		},
		"blobstorage_mp_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'blobstorage_mp'"
		},
		"filesystem_mm_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'filesystem_mm'"
		},
		"filesystem_mp_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'filesystem_mp'"
		},
		"ADLS_CSV_ez_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsgen2course.dfs.core.windows.net"
		},
		"ADLS_Inventory_parts_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsgen2course.dfs.core.windows.net"
		},
		"ADLS_Lego_tw_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsgen2course.dfs.core.windows.net"
		},
		"ADLS_lab01_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsgen2course.dfs.core.windows.net"
		},
		"ADLS_lab01_MR_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsgen2course.dfs.core.windows.net"
		},
		"ADLS_lego_MM_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsgen2course.dfs.core.windows.net"
		},
		"ADLS_lego_ma_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsgen2course.dfs.core.windows.net"
		},
		"ADLS_lego_mp_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsgen2course.dfs.core.windows.net"
		},
		"AzureDataLakeStoragelt_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsgen2course.dfs.core.windows.net"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kvdam.vault.azure.net/"
		},
		"Data_ADLS_Lego_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsgen2course.dfs.core.windows.net"
		},
		"Data_HTTP_Lego_dc_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://cdn.rebrickable.com/media/downloads/"
		},
		"Enh_HTTP_Source_TW_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://weather-b362.restdb.io/rest/random-weather-dec-2016"
		},
		"HTTP Lego_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://cdn.rebrickable.com/media/downloads/"
		},
		"HTTP_Logo_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://cdn.rebrickable.com/media/downloads/"
		},
		"HTTP_Logo_ma_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://cdn.rebrickable.com/media/downloads/"
		},
		"HTTP_Weather_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://weather-b362.restdb.io/rest/random-weather-dec-2016"
		},
		"HTTP_Weather_MB_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": " https://weather-b362.restdb.io/rest/random-weather-dec-2016"
		},
		"HTTP_Weather_fm_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://weather-b362.restdb.io/rest/random-weather-dec-2016"
		},
		"HttpLegoMM_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://cdn.rebrickable.com/media/downloads/"
		},
		"HttpServer1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://weather-b362.restdb.io/rest/random-weather-dec-2016"
		},
		"HttpServerTW_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://cdn.rebrickable.com/media/downloads/"
		},
		"Http_Inventory_parts_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://cdn.rebrickable.com/media/downloads/"
		},
		"INVPARTS_HTTP_CONN_ez_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://cdn.rebrickable.com/media/downloads/"
		},
		"Page_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://cdn.rebrickable.com/media/downloads/"
		},
		"SODACrimeAPI_DC_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.cityofchicago.org/resource/crimes.json?$limit=50000"
		},
		"SODACrimeAPI_TW_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.cityofchicago.org/resource/crimes.json?$limit=50000"
		},
		"SODACrimeAPI_ez_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.cityofchicago.org/resource/crimes.json?$limit=50000"
		},
		"SODACrimeAPI_fm_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.cityofchicago.org/resource/crimes.json?$limit=50000"
		},
		"SODACrimeAPI_gp_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.cityofchicago.org/resource/crimes.json?$limit=50000"
		},
		"SODACrimeAPI_lt_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.cityofchicago.org/resource/crimes.json?$limit=50000"
		},
		"SODACrimeAPI_mp_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.cityofchicago.org/resource/crimes.json?$limit=50000"
		},
		"SODACrime_API_MB_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.cityofchicago.org/resource/crimes.json?$limit=50000"
		},
		"filesystem_mm_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\Users\\Marco\\Desktop"
		},
		"filesystem_mm_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "Marco"
		},
		"filesystem_mp_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\Users\\info.AzureAD\\Downloads\\colors.csv"
		},
		"filesystem_mp_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "AzureAd\\Info"
		},
		"http_weather_MB2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://weather-b362.restdb.io/rest/random-weather-dec-2016"
		},
		"IR-DAM_properties_typeProperties_linkedInfo_resourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/55a9de92-ecad-42a7-9158-e95e8fe213ee/resourcegroups/DAM/providers/Microsoft.DataFactory/factories/Adfesame/integrationruntimes/IR-DAM"
		},
		"IR-TW_properties_typeProperties_linkedInfo_resourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/55a9de92-ecad-42a7-9158-e95e8fe213ee/resourcegroups/DAM/providers/Microsoft.DataFactory/factories/Adfesame/integrationruntimes/IR-DAM"
		},
		"IRfrancescomomesso_properties_typeProperties_linkedInfo_resourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/55a9de92-ecad-42a7-9158-e95e8fe213ee/resourcegroups/DAM/providers/Microsoft.DataFactory/factories/Adfesame/integrationruntimes/IR-DAM"
		},
		"IRlt_properties_typeProperties_linkedInfo_resourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/55a9de92-ecad-42a7-9158-e95e8fe213ee/resourcegroups/DAM/providers/Microsoft.DataFactory/factories/Adfesame/integrationruntimes/IR-DAM"
		},
		"IRma_properties_typeProperties_linkedInfo_resourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/55a9de92-ecad-42a7-9158-e95e8fe213ee/resourcegroups/DAM/providers/Microsoft.DataFactory/factories/Adfesame/integrationruntimes/IR-DAM"
		},
		"integrationRuntimMM_properties_typeProperties_linkedInfo_resourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/55a9de92-ecad-42a7-9158-e95e8fe213ee/resourcegroups/DAM/providers/Microsoft.DataFactory/factories/Adfesame/integrationruntimes/IR-DAM"
		},
		"ir-MB_properties_typeProperties_linkedInfo_resourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/55a9de92-ecad-42a7-9158-e95e8fe213ee/resourcegroups/DAM/providers/Microsoft.DataFactory/factories/Adfesame/integrationruntimes/IR-DAM"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Copy_MR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "@{pipeline().parameters.FileName}.csv"
							},
							{
								"name": "Destination",
								"value": "lego_mr//@{pipeline().parameters.FileName}.csv//@{pipeline().parameters.FileName}.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": "0"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2
						},
						"inputs": [
							{
								"referenceName": "HTTP_Parts_MR",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@pipeline().parameters.filename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ADL_Parts_MR",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@pipeline().parameters.filename",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"filename": {
						"type": "string",
						"defaultValue": "filename"
					}
				},
				"annotations": [
					"ciao"
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HTTP_Parts_MR')]",
				"[concat(variables('factoryId'), '/datasets/ADL_Parts_MR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Crime_HTTP_To_ABS_fm')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy HTTP to ABS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"path": "$['case_number']"
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"path": "$['date']"
										},
										"sink": {
											"type": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"path": "$['block']"
										},
										"sink": {
											"type": "String",
											"ordinal": 4
										}
									},
									{
										"source": {
											"path": "$['iucr']"
										},
										"sink": {
											"type": "String",
											"ordinal": 5
										}
									},
									{
										"source": {
											"path": "$['primary_type']"
										},
										"sink": {
											"type": "String",
											"ordinal": 6
										}
									},
									{
										"source": {
											"path": "$['description']"
										},
										"sink": {
											"type": "String",
											"ordinal": 7
										}
									},
									{
										"source": {
											"path": "$['location_description']"
										},
										"sink": {
											"type": "String",
											"ordinal": 8
										}
									},
									{
										"source": {
											"path": "$['arrest']"
										},
										"sink": {
											"type": "Boolean",
											"ordinal": 9
										}
									},
									{
										"source": {
											"path": "$['domestic']"
										},
										"sink": {
											"type": "Boolean",
											"ordinal": 10
										}
									},
									{
										"source": {
											"path": "$['beat']"
										},
										"sink": {
											"type": "String",
											"ordinal": 11
										}
									},
									{
										"source": {
											"path": "$['district']"
										},
										"sink": {
											"type": "String",
											"ordinal": 12
										}
									},
									{
										"source": {
											"path": "$['ward']"
										},
										"sink": {
											"type": "String",
											"ordinal": 13
										}
									},
									{
										"source": {
											"path": "$['community_area']"
										},
										"sink": {
											"type": "String",
											"ordinal": 14
										}
									},
									{
										"source": {
											"path": "$['fbi_code']"
										},
										"sink": {
											"type": "String",
											"ordinal": 15
										}
									},
									{
										"source": {
											"path": "$['x_coordinate']"
										},
										"sink": {
											"type": "String",
											"ordinal": 16
										}
									},
									{
										"source": {
											"path": "$['y_coordinate']"
										},
										"sink": {
											"type": "String",
											"ordinal": 17
										}
									},
									{
										"source": {
											"path": "$['year']"
										},
										"sink": {
											"type": "String",
											"ordinal": 18
										}
									},
									{
										"source": {
											"path": "$['updated_on']"
										},
										"sink": {
											"type": "String",
											"ordinal": 19
										}
									},
									{
										"source": {
											"path": "$['latitude']"
										},
										"sink": {
											"type": "String",
											"ordinal": 20
										}
									},
									{
										"source": {
											"path": "$['longitude']"
										},
										"sink": {
											"type": "String",
											"ordinal": 21
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SODACrimeAPI_fm",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ChicagoCrimesFiles_fm",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Crime_DataFlow_fm",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy HTTP to ABS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Crime_DataFlow_fm",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CrimeDataFile": {},
									"SinkApril": {},
									"SinkDayOfWeek": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SODACrimeAPI_fm')]",
				"[concat(variables('factoryId'), '/datasets/DS_ChicagoCrimesFiles_fm')]",
				"[concat(variables('factoryId'), '/dataflows/Crime_DataFlow_fm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_TW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"path": "$['case_number']"
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"path": "$['date']"
										},
										"sink": {
											"type": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"path": "$['block']"
										},
										"sink": {
											"type": "String",
											"ordinal": 4
										}
									},
									{
										"source": {
											"path": "$['iucr']"
										},
										"sink": {
											"type": "String",
											"ordinal": 5
										}
									},
									{
										"source": {
											"path": "$['primary_type']"
										},
										"sink": {
											"type": "String",
											"ordinal": 6
										}
									},
									{
										"source": {
											"path": "$['description']"
										},
										"sink": {
											"type": "String",
											"ordinal": 7
										}
									},
									{
										"source": {
											"path": "$['location_description']"
										},
										"sink": {
											"type": "String",
											"ordinal": 8
										}
									},
									{
										"source": {
											"path": "$['arrest']"
										},
										"sink": {
											"type": "Boolean",
											"ordinal": 9
										}
									},
									{
										"source": {
											"path": "$['domestic']"
										},
										"sink": {
											"type": "Boolean",
											"ordinal": 10
										}
									},
									{
										"source": {
											"path": "$['beat']"
										},
										"sink": {
											"type": "String",
											"ordinal": 11
										}
									},
									{
										"source": {
											"path": "$['district']"
										},
										"sink": {
											"type": "String",
											"ordinal": 12
										}
									},
									{
										"source": {
											"path": "$['ward']"
										},
										"sink": {
											"type": "String",
											"ordinal": 13
										}
									},
									{
										"source": {
											"path": "$['community_area']"
										},
										"sink": {
											"type": "String",
											"ordinal": 14
										}
									},
									{
										"source": {
											"path": "$['fbi_code']"
										},
										"sink": {
											"type": "String",
											"ordinal": 15
										}
									},
									{
										"source": {
											"path": "$['x_coordinate']"
										},
										"sink": {
											"type": "String",
											"ordinal": 16
										}
									},
									{
										"source": {
											"path": "$['y_coordinate']"
										},
										"sink": {
											"type": "String",
											"ordinal": 17
										}
									},
									{
										"source": {
											"path": "$['year']"
										},
										"sink": {
											"type": "String",
											"ordinal": 18
										}
									},
									{
										"source": {
											"path": "$['updated_on']"
										},
										"sink": {
											"type": "String",
											"ordinal": 19
										}
									},
									{
										"source": {
											"path": "$['latitude']"
										},
										"sink": {
											"type": "String",
											"ordinal": 20
										}
									},
									{
										"source": {
											"path": "$['longitude']"
										},
										"sink": {
											"type": "String",
											"ordinal": 21
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SODACrimeAPI_TW",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ChicagoCrimeFiles_TW",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ThizAGudFlow_tw",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ThizAGudFlow_tw",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CrimeDataFile": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"folder": {
					"name": "Billy Pipes/ya opened it, didn'tcha?"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SODACrimeAPI_TW')]",
				"[concat(variables('factoryId'), '/datasets/DS_ChicagoCrimeFiles_TW')]",
				"[concat(variables('factoryId'), '/dataflows/ThizAGudFlow_tw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LEgo_HTTP_to_ADLS_Inventoryparts')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_g7u",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "@{pipeline().parameters.FileName}.csv"
							},
							{
								"name": "Destination",
								"value": "legoTW//@{pipeline().parameters.FileName}.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2
						},
						"inputs": [
							{
								"referenceName": "DS_HTTP_inventoryparts_tw",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "@pipeline().parameters.filename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_inventory_parts",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "FileName"
								}
							}
						]
					}
				],
				"parameters": {
					"filename": {
						"type": "string",
						"defaultValue": "FileName"
					}
				},
				"folder": {
					"name": "Pipeline marco"
				},
				"annotations": [
					"copia dati",
					"Lettura dal sito lego"
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_HTTP_inventoryparts_tw')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_inventory_parts')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lego_HTTP_to_ADLS_inventoryparts_ma')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_y1g",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "@{pipeline().parameters.FileName}.csv"
							},
							{
								"name": "Destination",
								"value": "legoma//@{pipeline().parameters.FileName}.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2
						},
						"inputs": [
							{
								"referenceName": "HTTP_Inventory_parts_ma",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_inventoryparts_ma",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "FileName"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HTTP_Inventory_parts_ma')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_inventoryparts_ma')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_EZ')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"path": "$['case_number']"
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"path": "$['date']"
										},
										"sink": {
											"type": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"path": "$['block']"
										},
										"sink": {
											"type": "String",
											"ordinal": 4
										}
									},
									{
										"source": {
											"path": "$['iucr']"
										},
										"sink": {
											"type": "String",
											"ordinal": 5
										}
									},
									{
										"source": {
											"path": "$['primary_type']"
										},
										"sink": {
											"type": "String",
											"ordinal": 6
										}
									},
									{
										"source": {
											"path": "$['description']"
										},
										"sink": {
											"type": "String",
											"ordinal": 7
										}
									},
									{
										"source": {
											"path": "$['location_description']"
										},
										"sink": {
											"type": "String",
											"ordinal": 8
										}
									},
									{
										"source": {
											"path": "$['arrest']"
										},
										"sink": {
											"type": "Boolean",
											"ordinal": 9
										}
									},
									{
										"source": {
											"path": "$['domestic']"
										},
										"sink": {
											"type": "Boolean",
											"ordinal": 10
										}
									},
									{
										"source": {
											"path": "$['beat']"
										},
										"sink": {
											"type": "String",
											"ordinal": 11
										}
									},
									{
										"source": {
											"path": "$['district']"
										},
										"sink": {
											"type": "String",
											"ordinal": 12
										}
									},
									{
										"source": {
											"path": "$['ward']"
										},
										"sink": {
											"type": "String",
											"ordinal": 13
										}
									},
									{
										"source": {
											"path": "$['community_area']"
										},
										"sink": {
											"type": "String",
											"ordinal": 14
										}
									},
									{
										"source": {
											"path": "$['fbi_code']"
										},
										"sink": {
											"type": "String",
											"ordinal": 15
										}
									},
									{
										"source": {
											"path": "$['x_coordinate']"
										},
										"sink": {
											"type": "String",
											"ordinal": 16
										}
									},
									{
										"source": {
											"path": "$['y_coordinate']"
										},
										"sink": {
											"type": "String",
											"ordinal": 17
										}
									},
									{
										"source": {
											"path": "$['year']"
										},
										"sink": {
											"type": "String",
											"ordinal": 18
										}
									},
									{
										"source": {
											"path": "$['updated_on']"
										},
										"sink": {
											"type": "String",
											"ordinal": 19
										}
									},
									{
										"source": {
											"path": "$['latitude']"
										},
										"sink": {
											"type": "String",
											"ordinal": 20
										}
									},
									{
										"source": {
											"path": "$['longitude']"
										},
										"sink": {
											"type": "String",
											"ordinal": 21
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SODACrimeAPI_ez",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ChicagoCrimeFiles_ez",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DataFlow_ez",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataFlow_ez",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CrimeDataFile": {},
									"SinkApril": {},
									"SinkDayOfWeek": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SODACrimeAPI_ez')]",
				"[concat(variables('factoryId'), '/datasets/DS_ChicagoCrimeFiles_ez')]",
				"[concat(variables('factoryId'), '/dataflows/DataFlow_ez')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeMB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"path": "$['case_number']"
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"path": "$['date']"
										},
										"sink": {
											"type": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"path": "$['block']"
										},
										"sink": {
											"type": "String",
											"ordinal": 4
										}
									},
									{
										"source": {
											"path": "$['iucr']"
										},
										"sink": {
											"type": "String",
											"ordinal": 5
										}
									},
									{
										"source": {
											"path": "$['primary_type']"
										},
										"sink": {
											"type": "String",
											"ordinal": 6
										}
									},
									{
										"source": {
											"path": "$['description']"
										},
										"sink": {
											"type": "String",
											"ordinal": 7
										}
									},
									{
										"source": {
											"path": "$['location_description']"
										},
										"sink": {
											"type": "String",
											"ordinal": 8
										}
									},
									{
										"source": {
											"path": "$['arrest']"
										},
										"sink": {
											"type": "Boolean",
											"ordinal": 9
										}
									},
									{
										"source": {
											"path": "$['domestic']"
										},
										"sink": {
											"type": "Boolean",
											"ordinal": 10
										}
									},
									{
										"source": {
											"path": "$['beat']"
										},
										"sink": {
											"type": "String",
											"ordinal": 11
										}
									},
									{
										"source": {
											"path": "$['district']"
										},
										"sink": {
											"type": "String",
											"ordinal": 12
										}
									},
									{
										"source": {
											"path": "$['ward']"
										},
										"sink": {
											"type": "String",
											"ordinal": 13
										}
									},
									{
										"source": {
											"path": "$['community_area']"
										},
										"sink": {
											"type": "String",
											"ordinal": 14
										}
									},
									{
										"source": {
											"path": "$['fbi_code']"
										},
										"sink": {
											"type": "String",
											"ordinal": 15
										}
									},
									{
										"source": {
											"path": "$['x_coordinate']"
										},
										"sink": {
											"type": "String",
											"ordinal": 16
										}
									},
									{
										"source": {
											"path": "$['y_coordinate']"
										},
										"sink": {
											"type": "String",
											"ordinal": 17
										}
									},
									{
										"source": {
											"path": "$['year']"
										},
										"sink": {
											"type": "String",
											"ordinal": 18
										}
									},
									{
										"source": {
											"path": "$['updated_on']"
										},
										"sink": {
											"type": "String",
											"ordinal": 19
										}
									},
									{
										"source": {
											"path": "$['latitude']"
										},
										"sink": {
											"type": "String",
											"ordinal": 20
										}
									},
									{
										"source": {
											"path": "$['longitude']"
										},
										"sink": {
											"type": "String",
											"ordinal": 21
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SODACrime_MB",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ChicagoCrimefiles_MB",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dataflow_MB",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_MB",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CrimeDataFile": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SODACrime_MB')]",
				"[concat(variables('factoryId'), '/datasets/DS_ChicagoCrimefiles_MB')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow_MB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"ordinal": 1
										}
									},
									{
										"source": {
											"path": "$['case_number']"
										},
										"sink": {
											"ordinal": 2
										}
									},
									{
										"source": {
											"path": "$['date']"
										},
										"sink": {
											"ordinal": 3
										}
									},
									{
										"source": {
											"path": "$['block']"
										},
										"sink": {
											"ordinal": 4
										}
									},
									{
										"source": {
											"path": "$['iucr']"
										},
										"sink": {
											"ordinal": 5
										}
									},
									{
										"source": {
											"path": "$['primary_type']"
										},
										"sink": {
											"ordinal": 6
										}
									},
									{
										"source": {
											"path": "$['description']"
										},
										"sink": {
											"ordinal": 7
										}
									},
									{
										"source": {
											"path": "$['location_description']"
										},
										"sink": {
											"ordinal": 8
										}
									},
									{
										"source": {
											"path": "$['arrest']"
										},
										"sink": {
											"ordinal": 9
										}
									},
									{
										"source": {
											"path": "$['domestic']"
										},
										"sink": {
											"ordinal": 10
										}
									},
									{
										"source": {
											"path": "$['beat']"
										},
										"sink": {
											"ordinal": 11
										}
									},
									{
										"source": {
											"path": "$['district']"
										},
										"sink": {
											"ordinal": 12
										}
									},
									{
										"source": {
											"path": "$['ward']"
										},
										"sink": {
											"ordinal": 13
										}
									},
									{
										"source": {
											"path": "$['community_area']"
										},
										"sink": {
											"ordinal": 14
										}
									},
									{
										"source": {
											"path": "$['fbi_code']"
										},
										"sink": {
											"ordinal": 15
										}
									},
									{
										"source": {
											"path": "$['x_coordinate']"
										},
										"sink": {
											"ordinal": 16
										}
									},
									{
										"source": {
											"path": "$['y_coordinate']"
										},
										"sink": {
											"ordinal": 17
										}
									},
									{
										"source": {
											"path": "$['year']"
										},
										"sink": {
											"ordinal": 18
										}
									},
									{
										"source": {
											"path": "$['updated_on']"
										},
										"sink": {
											"ordinal": 19
										}
									},
									{
										"source": {
											"path": "$['latitude']"
										},
										"sink": {
											"ordinal": 20
										}
									},
									{
										"source": {
											"path": "$['longitude']"
										},
										"sink": {
											"ordinal": 21
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SODACrimeAPI_lt",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ChicagoCrimesFiles_lt",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1_lt",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CrimeDataFile": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"folder": {
					"name": "Pipeline lt"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SODACrimeAPI_lt')]",
				"[concat(variables('factoryId'), '/datasets/DS_ChicagoCrimesFiles_lt')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow1_lt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Files",
							"value": [
								"colors",
								" inventari",
								" inventario_part",
								" parti_categorie",
								" parts",
								" sets",
								" themes"
							]
						}
					},
					{
						"name": "IfLoadAllFiles",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.LoadAllFiles",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "AggiungiInventorySet",
									"description": "",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Files",
										"value": "inventory_sets"
									}
								},
								{
									"name": "AggungiPartRelationship",
									"type": "AppendVariable",
									"dependsOn": [
										{
											"activity": "AggiungiInventorySet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Files",
										"value": "part_relationships"
									}
								}
							]
						}
					},
					{
						"name": "ForEachFiles",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "IfLoadAllFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('Files')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Lego_HTTP_to_ADLS_inventoryparts_ma",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"FileName": {
												"value": "@{item()}.csv.gz",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"LoadAllFiles": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"variables": {
					"Files": {
						"type": "Array"
					},
					"ListOfFiles": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Pipeline marco"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Lego_HTTP_to_ADLS_inventoryparts_ma')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"path": "$['case_number']"
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"path": "$['date']"
										},
										"sink": {
											"type": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"path": "$['block']"
										},
										"sink": {
											"type": "String",
											"ordinal": 4
										}
									},
									{
										"source": {
											"path": "$['iucr']"
										},
										"sink": {
											"type": "String",
											"ordinal": 5
										}
									},
									{
										"source": {
											"path": "$['primary_type']"
										},
										"sink": {
											"type": "String",
											"ordinal": 6
										}
									},
									{
										"source": {
											"path": "$['description']"
										},
										"sink": {
											"type": "String",
											"ordinal": 7
										}
									},
									{
										"source": {
											"path": "$['location_description']"
										},
										"sink": {
											"type": "String",
											"ordinal": 8
										}
									},
									{
										"source": {
											"path": "$['arrest']"
										},
										"sink": {
											"type": "Boolean",
											"ordinal": 9
										}
									},
									{
										"source": {
											"path": "$['domestic']"
										},
										"sink": {
											"type": "Boolean",
											"ordinal": 10
										}
									},
									{
										"source": {
											"path": "$['beat']"
										},
										"sink": {
											"type": "String",
											"ordinal": 11
										}
									},
									{
										"source": {
											"path": "$['district']"
										},
										"sink": {
											"type": "String",
											"ordinal": 12
										}
									},
									{
										"source": {
											"path": "$['ward']"
										},
										"sink": {
											"type": "String",
											"ordinal": 13
										}
									},
									{
										"source": {
											"path": "$['community_area']"
										},
										"sink": {
											"type": "String",
											"ordinal": 14
										}
									},
									{
										"source": {
											"path": "$['fbi_code']"
										},
										"sink": {
											"type": "String",
											"ordinal": 15
										}
									},
									{
										"source": {
											"path": "$['x_coordinate']"
										},
										"sink": {
											"type": "String",
											"ordinal": 16
										}
									},
									{
										"source": {
											"path": "$['y_coordinate']"
										},
										"sink": {
											"type": "String",
											"ordinal": 17
										}
									},
									{
										"source": {
											"path": "$['year']"
										},
										"sink": {
											"type": "String",
											"ordinal": 18
										}
									},
									{
										"source": {
											"path": "$['updated_on']"
										},
										"sink": {
											"type": "String",
											"ordinal": 19
										}
									},
									{
										"source": {
											"path": "$['latitude']"
										},
										"sink": {
											"type": "String",
											"ordinal": 20
										}
									},
									{
										"source": {
											"path": "$['longitude']"
										},
										"sink": {
											"type": "String",
											"ordinal": 21
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SODACrimeAPI_mp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ChicagoCrimesFiles_mp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CrimeDataFile": {},
									"sink1": {},
									"sink222222": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SODACrimeAPI_mp')]",
				"[concat(variables('factoryId'), '/datasets/DS_ChicagoCrimesFiles_mp')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_MR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Execute Pipeline2",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Copy_MR",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().IsActive,'1')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"LoadAllFiles": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"variables": {
					"ListOfFiles": {
						"type": "String"
					},
					"Files": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/pipelines/Copy_MR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_dc')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"path": "$['case_number']"
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"path": "$['date']"
										},
										"sink": {
											"type": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"path": "$['block']"
										},
										"sink": {
											"type": "String",
											"ordinal": 4
										}
									},
									{
										"source": {
											"path": "$['iucr']"
										},
										"sink": {
											"type": "String",
											"ordinal": 5
										}
									},
									{
										"source": {
											"path": "$['primary_type']"
										},
										"sink": {
											"type": "String",
											"ordinal": 6
										}
									},
									{
										"source": {
											"path": "$['description']"
										},
										"sink": {
											"type": "String",
											"ordinal": 7
										}
									},
									{
										"source": {
											"path": "$['location_description']"
										},
										"sink": {
											"type": "String",
											"ordinal": 8
										}
									},
									{
										"source": {
											"path": "$['arrest']"
										},
										"sink": {
											"type": "Boolean",
											"ordinal": 9
										}
									},
									{
										"source": {
											"path": "$['domestic']"
										},
										"sink": {
											"type": "Boolean",
											"ordinal": 10
										}
									},
									{
										"source": {
											"path": "$['beat']"
										},
										"sink": {
											"type": "String",
											"ordinal": 11
										}
									},
									{
										"source": {
											"path": "$['district']"
										},
										"sink": {
											"type": "String",
											"ordinal": 12
										}
									},
									{
										"source": {
											"path": "$['ward']"
										},
										"sink": {
											"type": "String",
											"ordinal": 13
										}
									},
									{
										"source": {
											"path": "$['community_area']"
										},
										"sink": {
											"type": "String",
											"ordinal": 14
										}
									},
									{
										"source": {
											"path": "$['fbi_code']"
										},
										"sink": {
											"type": "String",
											"ordinal": 15
										}
									},
									{
										"source": {
											"path": "$['x_coordinate']"
										},
										"sink": {
											"type": "String",
											"ordinal": 16
										}
									},
									{
										"source": {
											"path": "$['y_coordinate']"
										},
										"sink": {
											"type": "String",
											"ordinal": 17
										}
									},
									{
										"source": {
											"path": "$['year']"
										},
										"sink": {
											"type": "String",
											"ordinal": 18
										}
									},
									{
										"source": {
											"path": "$['updated_on']"
										},
										"sink": {
											"type": "String",
											"ordinal": 19
										}
									},
									{
										"source": {
											"path": "$['latitude']"
										},
										"sink": {
											"type": "String",
											"ordinal": 20
										}
									},
									{
										"source": {
											"path": "$['longitude']"
										},
										"sink": {
											"type": "String",
											"ordinal": 21
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SODACrimeAPI_DC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ChicagoCrimeFiles_DC",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dataflow_DC",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_DC",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CrimeDataFile": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SODACrimeAPI_DC')]",
				"[concat(variables('factoryId'), '/datasets/DS_ChicagoCrimeFiles_DC')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow_DC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinegp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"path": "$['case_number']"
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"path": "$['date']"
										},
										"sink": {
											"type": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"path": "$['block']"
										},
										"sink": {
											"type": "String",
											"ordinal": 4
										}
									},
									{
										"source": {
											"path": "$['iucr']"
										},
										"sink": {
											"type": "String",
											"ordinal": 5
										}
									},
									{
										"source": {
											"path": "$['primary_type']"
										},
										"sink": {
											"type": "String",
											"ordinal": 6
										}
									},
									{
										"source": {
											"path": "$['description']"
										},
										"sink": {
											"type": "String",
											"ordinal": 7
										}
									},
									{
										"source": {
											"path": "$['location_description']"
										},
										"sink": {
											"type": "String",
											"ordinal": 8
										}
									},
									{
										"source": {
											"path": "$['arrest']"
										},
										"sink": {
											"type": "Boolean",
											"ordinal": 9
										}
									},
									{
										"source": {
											"path": "$['domestic']"
										},
										"sink": {
											"type": "Boolean",
											"ordinal": 10
										}
									},
									{
										"source": {
											"path": "$['beat']"
										},
										"sink": {
											"type": "String",
											"ordinal": 11
										}
									},
									{
										"source": {
											"path": "$['district']"
										},
										"sink": {
											"type": "String",
											"ordinal": 12
										}
									},
									{
										"source": {
											"path": "$['ward']"
										},
										"sink": {
											"type": "String",
											"ordinal": 13
										}
									},
									{
										"source": {
											"path": "$['community_area']"
										},
										"sink": {
											"type": "String",
											"ordinal": 14
										}
									},
									{
										"source": {
											"path": "$['fbi_code']"
										},
										"sink": {
											"type": "String",
											"ordinal": 15
										}
									},
									{
										"source": {
											"path": "$['x_coordinate']"
										},
										"sink": {
											"type": "String",
											"ordinal": 16
										}
									},
									{
										"source": {
											"path": "$['y_coordinate']"
										},
										"sink": {
											"type": "String",
											"ordinal": 17
										}
									},
									{
										"source": {
											"path": "$['year']"
										},
										"sink": {
											"type": "String",
											"ordinal": 18
										}
									},
									{
										"source": {
											"path": "$['updated_on']"
										},
										"sink": {
											"type": "String",
											"ordinal": 19
										}
									},
									{
										"source": {
											"path": "$['latitude']"
										},
										"sink": {
											"type": "String",
											"ordinal": 20
										}
									},
									{
										"source": {
											"path": "$['longitude']"
										},
										"sink": {
											"type": "String",
											"ordinal": 21
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SODACrimeAPI_gp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ChicagoCrimesFiles_gp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CrimeDataFile": {},
									"sink1": {},
									"sink222222": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SODACrimeAPI_gp')]",
				"[concat(variables('factoryId'), '/datasets/DS_ChicagoCrimesFiles_gp')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADL_Parts_MR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_lab01_MR",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "FileName"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": "legomr"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_lab01_MR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQLSalesReport')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "OrderDate",
						"type": "date"
					},
					{
						"name": "StockItemName",
						"type": "nvarchar"
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SalesReport"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSCrimeByDOW_gp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobstorage_gp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "lab3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobstorage_gp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Color')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_lego_mp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "legomp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_lego_mp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Color_MR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_lab01_MR",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "legomr"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_lab01_MR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_InvParts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_Lego_tw",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "inventory_parts.csv",
						"fileSystem": "legotw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_Lego_tw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_InventoryPartsConData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Data_ADLS_Lego",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "legomp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Data_ADLS_Lego')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_InventoryPartsConData_fm')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Data_ADLS_Lego",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "legofm"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Data_ADLS_Lego')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_InventoryPartsWithData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_lab01_MR",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "legomr"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_lab01_MR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_color1_MM')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_lego_MM",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "legomm"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_lego_MM')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_inventory_parts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_lego_mp",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "FileName"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": "legomp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_lego_mp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_inventory_partsGP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_Inventory_parts",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "legogp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_Inventory_parts')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_inventory_parts_mm')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_lego_MM",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "FileName"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": "legomm"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_lego_MM')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_inventoryparts_ma')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_lego_ma",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "FileName"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": "legoma"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_lego_ma')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_inventorypartscondata_ma')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Data_ADLS_Lego",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "legoma"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Data_ADLS_Lego')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADSL_Coler')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_lego_ma",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "legoma"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_lego_ma')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Adls_inventorypartsconDataMM')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_lego_MM",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "legomm"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_lego_MM')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AzureWideWorldImporters')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect to your data destination store.",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "StockGroupName",
						"type": "String"
					},
					{
						"name": "LineProfit",
						"type": "Double"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[StockGroupLineProfit]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AzureWideWorldImporters2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "OrderDate",
						"type": "date"
					},
					{
						"name": "StockItemName",
						"type": "nvarchar"
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SalesReport"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "esame"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CSV_mp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "filesystem_mp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "colors.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "rgb",
						"type": "String"
					},
					{
						"name": "is_trans",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/filesystem_mp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ChicagoCrimeFiles_DC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobstorage_DC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "chicagocrimefiles_DC.csv",
						"container": "lab3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobstorage_DC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ChicagoCrimeFiles_TW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobby_tw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Billy Dataset/this ain't ya folder, bro"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "chicagocrimefile_tw.csv",
						"container": "lab3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobby_tw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ChicagoCrimeFiles_ez')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobstorage_ez",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "chicagocrimefile_ez.csv",
						"container": "lab3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobstorage_ez')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ChicagoCrimefiles_MB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage_MB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ChicagoCrimeFiles_MB.csv",
						"container": "lab3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage_MB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ChicagoCrimesFiles_fm')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage_fm",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ChicagoCrimeFile_fm.csv",
						"container": "lab3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage_fm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ChicagoCrimesFiles_gp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobstorage_gp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "chicagocrimefile_gp.csv",
						"container": "lab3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobstorage_gp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ChicagoCrimesFiles_lt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobstorage_lt",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ChicagoCrimeFile_lt.csv",
						"container": "lab3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobstorage_lt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ChicagoCrimesFiles_mp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobstorage_mp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "chicagocrimefile_mp.csv",
						"container": "lab3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobstorage_mp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CrimeByDayOfWeek_fm')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage_fm",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "lab3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage_fm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CrimeByDayOfWeek_lt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobstorage_lt",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "lab3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobstorage_lt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CrimeByDayOfWeek_mp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobstorage_mp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "lab3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobstorage_mp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CrimeByDayOfWeek_tw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobby_tw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Billy Dataset/this ain't ya folder, bro"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "lab3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobby_tw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CrimeDayOfWeek_DC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobstorage_DC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "lab3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobstorage_DC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CrimeFile2020')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobby_tw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Billy Dataset/this ain't ya folder, bro"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "lab3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobby_tw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CrimeFile2020_lt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobstorage_lt",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "lab3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobstorage_lt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CrimeFileApril2020_gp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobstorage_gp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "lab3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobstorage_gp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CrimeFileApril_DC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobstorage_DC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "lab3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobstorage_DC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CrimeFileApril_fm')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage_fm",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "lab3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage_fm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_HTTP_inventory_parts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HTTP_Logo",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "FileName"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().FileName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "inventory_id",
						"type": "String"
					},
					{
						"name": "part_num",
						"type": "String"
					},
					{
						"name": "color_id",
						"type": "String"
					},
					{
						"name": "quantity",
						"type": "String"
					},
					{
						"name": "is_spare",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HTTP_Logo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_HTTP_inventoryparts_tw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HTTP_Logo",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string",
						"defaultValue": "FileName"
					}
				},
				"folder": {
					"name": "Billy Dataset/this ain't ya folder, bro"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().filename",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "inventory_id",
						"type": "String"
					},
					{
						"name": "part_num",
						"type": "String"
					},
					{
						"name": "color_id",
						"type": "String"
					},
					{
						"name": "quantity",
						"type": "String"
					},
					{
						"name": "is_spare",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HTTP_Logo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_LocalSQLWideWorldImporters')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect to your data source store.",
				"linkedServiceName": {
					"referenceName": "LocalDBToAzureDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "StockGroupName",
						"type": "String"
					},
					{
						"name": "LineProfit",
						"type": "Decimal"
					}
				],
				"typeProperties": {
					"tableName": "[[Application].[Cities]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LocalDBToAzureDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SODACrimeAPI_DC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SODACrimeAPI_DC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"case_number": {
							"type": "string"
						},
						"date": {
							"type": "string"
						},
						"block": {
							"type": "string"
						},
						"iucr": {
							"type": "string"
						},
						"primary_type": {
							"type": "string"
						},
						"description": {
							"type": "string"
						},
						"location_description": {
							"type": "string"
						},
						"arrest": {
							"type": "boolean"
						},
						"domestic": {
							"type": "boolean"
						},
						"beat": {
							"type": "string"
						},
						"district": {
							"type": "string"
						},
						"ward": {
							"type": "string"
						},
						"community_area": {
							"type": "string"
						},
						"fbi_code": {
							"type": "string"
						},
						"x_coordinate": {
							"type": "string"
						},
						"y_coordinate": {
							"type": "string"
						},
						"year": {
							"type": "string"
						},
						"updated_on": {
							"type": "string"
						},
						"latitude": {
							"type": "string"
						},
						"longitude": {
							"type": "string"
						},
						"location": {
							"type": "object",
							"properties": {
								"latitude": {
									"type": "string"
								},
								"longitude": {
									"type": "string"
								},
								"human_address": {
									"type": "string"
								}
							}
						},
						":@computed_region_awaf_s7ux": {
							"type": "string"
						},
						":@computed_region_6mkv_f3dw": {
							"type": "string"
						},
						":@computed_region_vrxf_vc4k": {
							"type": "string"
						},
						":@computed_region_bdys_3d7i": {
							"type": "string"
						},
						":@computed_region_43wa_7qmu": {
							"type": "string"
						},
						":@computed_region_rpca_8um6": {
							"type": "string"
						},
						":@computed_region_d9mm_jgwp": {
							"type": "string"
						},
						":@computed_region_d3ds_rm58": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SODACrimeAPI_DC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SODACrimeAPI_TW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SODACrimeAPI_TW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Billy Dataset/this ain't ya folder, bro"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"case_number": {
							"type": "string"
						},
						"date": {
							"type": "string"
						},
						"block": {
							"type": "string"
						},
						"iucr": {
							"type": "string"
						},
						"primary_type": {
							"type": "string"
						},
						"description": {
							"type": "string"
						},
						"location_description": {
							"type": "string"
						},
						"arrest": {
							"type": "boolean"
						},
						"domestic": {
							"type": "boolean"
						},
						"beat": {
							"type": "string"
						},
						"district": {
							"type": "string"
						},
						"ward": {
							"type": "string"
						},
						"community_area": {
							"type": "string"
						},
						"fbi_code": {
							"type": "string"
						},
						"x_coordinate": {
							"type": "string"
						},
						"y_coordinate": {
							"type": "string"
						},
						"year": {
							"type": "string"
						},
						"updated_on": {
							"type": "string"
						},
						"latitude": {
							"type": "string"
						},
						"longitude": {
							"type": "string"
						},
						"location": {
							"type": "object",
							"properties": {
								"latitude": {
									"type": "string"
								},
								"longitude": {
									"type": "string"
								},
								"human_address": {
									"type": "string"
								}
							}
						},
						":@computed_region_awaf_s7ux": {
							"type": "string"
						},
						":@computed_region_6mkv_f3dw": {
							"type": "string"
						},
						":@computed_region_vrxf_vc4k": {
							"type": "string"
						},
						":@computed_region_bdys_3d7i": {
							"type": "string"
						},
						":@computed_region_43wa_7qmu": {
							"type": "string"
						},
						":@computed_region_rpca_8um6": {
							"type": "string"
						},
						":@computed_region_d9mm_jgwp": {
							"type": "string"
						},
						":@computed_region_d3ds_rm58": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SODACrimeAPI_TW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SODACrimeAPI_ez')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SODACrimeAPI_ez",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"case_number": {
							"type": "string"
						},
						"date": {
							"type": "string"
						},
						"block": {
							"type": "string"
						},
						"iucr": {
							"type": "string"
						},
						"primary_type": {
							"type": "string"
						},
						"description": {
							"type": "string"
						},
						"location_description": {
							"type": "string"
						},
						"arrest": {
							"type": "boolean"
						},
						"domestic": {
							"type": "boolean"
						},
						"beat": {
							"type": "string"
						},
						"district": {
							"type": "string"
						},
						"ward": {
							"type": "string"
						},
						"community_area": {
							"type": "string"
						},
						"fbi_code": {
							"type": "string"
						},
						"x_coordinate": {
							"type": "string"
						},
						"y_coordinate": {
							"type": "string"
						},
						"year": {
							"type": "string"
						},
						"updated_on": {
							"type": "string"
						},
						"latitude": {
							"type": "string"
						},
						"longitude": {
							"type": "string"
						},
						"location": {
							"type": "object",
							"properties": {
								"latitude": {
									"type": "string"
								},
								"longitude": {
									"type": "string"
								},
								"human_address": {
									"type": "string"
								}
							}
						},
						":@computed_region_awaf_s7ux": {
							"type": "string"
						},
						":@computed_region_6mkv_f3dw": {
							"type": "string"
						},
						":@computed_region_vrxf_vc4k": {
							"type": "string"
						},
						":@computed_region_bdys_3d7i": {
							"type": "string"
						},
						":@computed_region_43wa_7qmu": {
							"type": "string"
						},
						":@computed_region_rpca_8um6": {
							"type": "string"
						},
						":@computed_region_d9mm_jgwp": {
							"type": "string"
						},
						":@computed_region_d3ds_rm58": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SODACrimeAPI_ez')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SODACrimeAPI_fm')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SODACrimeAPI_fm",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"case_number": {
							"type": "string"
						},
						"date": {
							"type": "string"
						},
						"block": {
							"type": "string"
						},
						"iucr": {
							"type": "string"
						},
						"primary_type": {
							"type": "string"
						},
						"description": {
							"type": "string"
						},
						"location_description": {
							"type": "string"
						},
						"arrest": {
							"type": "boolean"
						},
						"domestic": {
							"type": "boolean"
						},
						"beat": {
							"type": "string"
						},
						"district": {
							"type": "string"
						},
						"ward": {
							"type": "string"
						},
						"community_area": {
							"type": "string"
						},
						"fbi_code": {
							"type": "string"
						},
						"x_coordinate": {
							"type": "string"
						},
						"y_coordinate": {
							"type": "string"
						},
						"year": {
							"type": "string"
						},
						"updated_on": {
							"type": "string"
						},
						"latitude": {
							"type": "string"
						},
						"longitude": {
							"type": "string"
						},
						"location": {
							"type": "object",
							"properties": {
								"latitude": {
									"type": "string"
								},
								"longitude": {
									"type": "string"
								},
								"human_address": {
									"type": "string"
								}
							}
						},
						":@computed_region_awaf_s7ux": {
							"type": "string"
						},
						":@computed_region_6mkv_f3dw": {
							"type": "string"
						},
						":@computed_region_vrxf_vc4k": {
							"type": "string"
						},
						":@computed_region_bdys_3d7i": {
							"type": "string"
						},
						":@computed_region_43wa_7qmu": {
							"type": "string"
						},
						":@computed_region_rpca_8um6": {
							"type": "string"
						},
						":@computed_region_d9mm_jgwp": {
							"type": "string"
						},
						":@computed_region_d3ds_rm58": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SODACrimeAPI_fm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SODACrimeAPI_gp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SODACrimeAPI_gp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"case_number": {
							"type": "string"
						},
						"date": {
							"type": "string"
						},
						"block": {
							"type": "string"
						},
						"iucr": {
							"type": "string"
						},
						"primary_type": {
							"type": "string"
						},
						"description": {
							"type": "string"
						},
						"location_description": {
							"type": "string"
						},
						"arrest": {
							"type": "boolean"
						},
						"domestic": {
							"type": "boolean"
						},
						"beat": {
							"type": "string"
						},
						"district": {
							"type": "string"
						},
						"ward": {
							"type": "string"
						},
						"community_area": {
							"type": "string"
						},
						"fbi_code": {
							"type": "string"
						},
						"x_coordinate": {
							"type": "string"
						},
						"y_coordinate": {
							"type": "string"
						},
						"year": {
							"type": "string"
						},
						"updated_on": {
							"type": "string"
						},
						"latitude": {
							"type": "string"
						},
						"longitude": {
							"type": "string"
						},
						"location": {
							"type": "object",
							"properties": {
								"latitude": {
									"type": "string"
								},
								"longitude": {
									"type": "string"
								},
								"human_address": {
									"type": "string"
								}
							}
						},
						":@computed_region_awaf_s7ux": {
							"type": "string"
						},
						":@computed_region_6mkv_f3dw": {
							"type": "string"
						},
						":@computed_region_vrxf_vc4k": {
							"type": "string"
						},
						":@computed_region_bdys_3d7i": {
							"type": "string"
						},
						":@computed_region_43wa_7qmu": {
							"type": "string"
						},
						":@computed_region_rpca_8um6": {
							"type": "string"
						},
						":@computed_region_d9mm_jgwp": {
							"type": "string"
						},
						":@computed_region_d3ds_rm58": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SODACrimeAPI_gp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SODACrimeAPI_lt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SODACrimeAPI_lt",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"case_number": {
							"type": "string"
						},
						"date": {
							"type": "string"
						},
						"block": {
							"type": "string"
						},
						"iucr": {
							"type": "string"
						},
						"primary_type": {
							"type": "string"
						},
						"description": {
							"type": "string"
						},
						"location_description": {
							"type": "string"
						},
						"arrest": {
							"type": "boolean"
						},
						"domestic": {
							"type": "boolean"
						},
						"beat": {
							"type": "string"
						},
						"district": {
							"type": "string"
						},
						"ward": {
							"type": "string"
						},
						"community_area": {
							"type": "string"
						},
						"fbi_code": {
							"type": "string"
						},
						"x_coordinate": {
							"type": "string"
						},
						"y_coordinate": {
							"type": "string"
						},
						"year": {
							"type": "string"
						},
						"updated_on": {
							"type": "string"
						},
						"latitude": {
							"type": "string"
						},
						"longitude": {
							"type": "string"
						},
						"location": {
							"type": "object",
							"properties": {
								"latitude": {
									"type": "string"
								},
								"longitude": {
									"type": "string"
								},
								"human_address": {
									"type": "string"
								}
							}
						},
						":@computed_region_awaf_s7ux": {
							"type": "string"
						},
						":@computed_region_6mkv_f3dw": {
							"type": "string"
						},
						":@computed_region_vrxf_vc4k": {
							"type": "string"
						},
						":@computed_region_bdys_3d7i": {
							"type": "string"
						},
						":@computed_region_43wa_7qmu": {
							"type": "string"
						},
						":@computed_region_rpca_8um6": {
							"type": "string"
						},
						":@computed_region_d9mm_jgwp": {
							"type": "string"
						},
						":@computed_region_d3ds_rm58": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SODACrimeAPI_lt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SODACrimeAPI_mp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SODACrimeAPI_mp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"case_number": {
							"type": "string"
						},
						"date": {
							"type": "string"
						},
						"block": {
							"type": "string"
						},
						"iucr": {
							"type": "string"
						},
						"primary_type": {
							"type": "string"
						},
						"description": {
							"type": "string"
						},
						"location_description": {
							"type": "string"
						},
						"arrest": {
							"type": "boolean"
						},
						"domestic": {
							"type": "boolean"
						},
						"beat": {
							"type": "string"
						},
						"district": {
							"type": "string"
						},
						"ward": {
							"type": "string"
						},
						"community_area": {
							"type": "string"
						},
						"fbi_code": {
							"type": "string"
						},
						"x_coordinate": {
							"type": "string"
						},
						"y_coordinate": {
							"type": "string"
						},
						"year": {
							"type": "string"
						},
						"updated_on": {
							"type": "string"
						},
						"latitude": {
							"type": "string"
						},
						"longitude": {
							"type": "string"
						},
						"location": {
							"type": "object",
							"properties": {
								"latitude": {
									"type": "string"
								},
								"longitude": {
									"type": "string"
								},
								"human_address": {
									"type": "string"
								}
							}
						},
						":@computed_region_awaf_s7ux": {
							"type": "string"
						},
						":@computed_region_6mkv_f3dw": {
							"type": "string"
						},
						":@computed_region_vrxf_vc4k": {
							"type": "string"
						},
						":@computed_region_bdys_3d7i": {
							"type": "string"
						},
						":@computed_region_43wa_7qmu": {
							"type": "string"
						},
						":@computed_region_rpca_8um6": {
							"type": "string"
						},
						":@computed_region_d9mm_jgwp": {
							"type": "string"
						},
						":@computed_region_d3ds_rm58": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SODACrimeAPI_mp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SODACrime_MB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SODACrime_API_MB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"case_number": {
							"type": "string"
						},
						"date": {
							"type": "string"
						},
						"block": {
							"type": "string"
						},
						"iucr": {
							"type": "string"
						},
						"primary_type": {
							"type": "string"
						},
						"description": {
							"type": "string"
						},
						"location_description": {
							"type": "string"
						},
						"arrest": {
							"type": "boolean"
						},
						"domestic": {
							"type": "boolean"
						},
						"beat": {
							"type": "string"
						},
						"district": {
							"type": "string"
						},
						"ward": {
							"type": "string"
						},
						"community_area": {
							"type": "string"
						},
						"fbi_code": {
							"type": "string"
						},
						"x_coordinate": {
							"type": "string"
						},
						"y_coordinate": {
							"type": "string"
						},
						"year": {
							"type": "string"
						},
						"updated_on": {
							"type": "string"
						},
						"latitude": {
							"type": "string"
						},
						"longitude": {
							"type": "string"
						},
						"location": {
							"type": "object",
							"properties": {
								"latitude": {
									"type": "string"
								},
								"longitude": {
									"type": "string"
								},
								"human_address": {
									"type": "string"
								}
							}
						},
						":@computed_region_awaf_s7ux": {
							"type": "string"
						},
						":@computed_region_6mkv_f3dw": {
							"type": "string"
						},
						":@computed_region_vrxf_vc4k": {
							"type": "string"
						},
						":@computed_region_bdys_3d7i": {
							"type": "string"
						},
						":@computed_region_43wa_7qmu": {
							"type": "string"
						},
						":@computed_region_rpca_8um6": {
							"type": "string"
						},
						":@computed_region_d9mm_jgwp": {
							"type": "string"
						},
						":@computed_region_d3ds_rm58": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SODACrime_API_MB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_crime')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bloblab01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "lab3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bloblab01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_http_invetory_parts_MM')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpLegoMM",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "FileName"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().FileName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "inventory_id",
						"type": "String"
					},
					{
						"name": "part_num",
						"type": "String"
					},
					{
						"name": "color_id",
						"type": "String"
					},
					{
						"name": "quantity",
						"type": "String"
					},
					{
						"name": "is_spare",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpLegoMM')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Datafilecrime_MB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bloblab01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "lab3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bloblab01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bloblab01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "LegoCinfigurationFile.csv",
						"container": "lab01"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bloblab01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bloblab01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "LegoCinfigurationFile.csv",
						"container": "lab01"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bloblab01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedTextma')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "filesystem_mp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/filesystem_mp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_fg5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "201612-WeatherData.txt",
						"container": "lab01"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_kj1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bloblab01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "201612-WeatherData.txt",
						"container": "lab01"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bloblab01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_v3k')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bloblab01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "201612-WeatherData.txt",
						"container": "lab0"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bloblab01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_vnk')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_lab01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "inventory_parts.csv",
						"fileSystem": "legogp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_lab01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_wem')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_CSV_ez",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "invpartesez.csv",
						"fileSystem": "robaez"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_CSV_ez')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_xem')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzStorage_stagingMB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "201612-WeatherData.txt",
						"container": "lab01"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzStorage_stagingMB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_ym9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_CSV_ez",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "inventorypartsez.csv",
						"fileSystem": "legoez"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_CSV_ez')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Filesystem_onprem_mm')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "filesystem_mm",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "one.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/filesystem_mm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HTTP_Inventory_parts_ma')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HTTP_Logo_ma",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "FileName"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().FileName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "inventory_id",
						"type": "String"
					},
					{
						"name": "part_num",
						"type": "String"
					},
					{
						"name": "color_id",
						"type": "String"
					},
					{
						"name": "quantity",
						"type": "String"
					},
					{
						"name": "is_spare",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HTTP_Logo_ma')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HTTP_Parts_MR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Page",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "FileName"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().FileName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "inventory_id",
						"type": "String"
					},
					{
						"name": "part_num",
						"type": "String"
					},
					{
						"name": "color_id",
						"type": "String"
					},
					{
						"name": "quantity",
						"type": "String"
					},
					{
						"name": "is_spare",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Page')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_kj1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"_id": {
							"type": "string"
						},
						"date": {
							"type": "string"
						},
						"dateint": {
							"type": "integer"
						},
						"airport": {
							"type": "string"
						},
						"temp": {
							"type": "integer"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_v3k')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Enh_HTTP_Source_TW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Billy Dataset/this ain't ya folder, bro"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"_id": {
							"type": "string"
						},
						"date": {
							"type": "string"
						},
						"dateint": {
							"type": "integer"
						},
						"airport": {
							"type": "string"
						},
						"temp": {
							"type": "integer"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Enh_HTTP_Source_TW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_vnk')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HTTP Lego",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "inventory_parts.csv.gz"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "inventory_id",
						"type": "String"
					},
					{
						"name": "part_num",
						"type": "String"
					},
					{
						"name": "color_id",
						"type": "String"
					},
					{
						"name": "quantity",
						"type": "String"
					},
					{
						"name": "is_spare",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HTTP Lego')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_wem')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "INVPARTS_HTTP_CONN_ez",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "inventory_parts.csv.gz"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "inventory_id",
						"type": "String"
					},
					{
						"name": "part_num",
						"type": "String"
					},
					{
						"name": "color_id",
						"type": "String"
					},
					{
						"name": "quantity",
						"type": "String"
					},
					{
						"name": "is_spare",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/INVPARTS_HTTP_CONN_ez')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_xem')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HTTP_Weather_MB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"_id": {
							"type": "string"
						},
						"date": {
							"type": "string"
						},
						"dateint": {
							"type": "integer"
						},
						"airport": {
							"type": "string"
						},
						"temp": {
							"type": "integer"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HTTP_Weather_MB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_ym9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "INVPARTS_HTTP_CONN_ez",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "inventory_parts.csv.gz"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "10",
						"type": "String"
					},
					{
						"name": "paddle",
						"type": "String"
					},
					{
						"name": "0",
						"type": "String"
					},
					{
						"name": "13",
						"type": "String"
					},
					{
						"name": "f",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/INVPARTS_HTTP_CONN_ez')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/da_adls_color')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_Inventory_parts",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "legogp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_Inventory_parts')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ABS_Weather_fm')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ABS_Weather_fm_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_CSV_ez')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS_CSV_ez_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLS_CSV_ez_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_Inventory_parts')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS_Inventory_parts_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLS_Inventory_parts_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_Lego_tw')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS_Lego_tw_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLS_Lego_tw_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_lab01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS_lab01_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLS_lab01_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_lab01_MR')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS_lab01_MR_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLS_lab01_MR_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_lego_MM')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS_lego_MM_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLS_lego_MM_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_lego_ma')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS_lego_ma_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLS_lego_ma_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_lego_mp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS_lego_mp_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLS_lego_mp_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzStorage_stagingMB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzStorage_stagingMB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStoragelt')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStoragelt_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStoragelt_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobStorage_MB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('BlobStorage_MB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobStorage_fm')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('BlobStorage_fm_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Data_ADLS_Lego')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Data_ADLS_Lego_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Data_ADLS_Lego_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Data_HTTP_Lego_dc')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "daniele cavinato",
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('Data_HTTP_Lego_dc_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Enh_HTTP_Source_TW')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Sorgente HTTP dei dati",
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('Enh_HTTP_Source_TW_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HTTP Lego')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connessione a rebrickable.com/media/downloads/",
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HTTP Lego_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HTTP_Logo')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HTTP_Logo_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HTTP_Logo_ma')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HTTP_Logo_ma_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HTTP_Weather')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HTTP_Weather_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HTTP_Weather_MB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HTTP_Weather_MB_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HTTP_Weather_fm')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HTTP_Weather_fm_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpLegoMM')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "lego marco",
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpLegoMM_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServerTW')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServerTW_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Http_Inventory_parts')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('Http_Inventory_parts_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/INVPARTS_HTTP_CONN_ez')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connessione",
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('INVPARTS_HTTP_CONN_ez_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LocalDBToAzureDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('LocalDBToAzureDB_connectionString')]"
				},
				"connectVia": {
					"referenceName": "IR-DAM",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-DAM')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Page')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('Page_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SODACrimeAPI_DC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('SODACrimeAPI_DC_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SODACrimeAPI_TW')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('SODACrimeAPI_TW_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SODACrimeAPI_ez')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('SODACrimeAPI_ez_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SODACrimeAPI_fm')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('SODACrimeAPI_fm_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SODACrimeAPI_gp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('SODACrimeAPI_gp_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SODACrimeAPI_lt')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('SODACrimeAPI_lt_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SODACrimeAPI_mp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('SODACrimeAPI_mp_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SODACrime_API_MB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('SODACrime_API_MB_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobby_tw')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('blobby_tw_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/bloblab01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('bloblab01_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobstorage_DC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('blobstorage_DC_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobstorage_ez')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('blobstorage_ez_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobstorage_gp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('blobstorage_gp_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobstorage_lt')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('blobstorage_lt_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobstorage_mp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('blobstorage_mp_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/filesystem_mm')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('filesystem_mm_properties_typeProperties_host')]",
					"userId": "[parameters('filesystem_mm_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('filesystem_mm_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IRMM",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IRMM')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/filesystem_mp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('filesystem_mp_properties_typeProperties_host')]",
					"userId": "[parameters('filesystem_mp_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('filesystem_mp_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IRmarcopozzan",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IRmarcopozzan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/http_weather_MB2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('http_weather_MB2_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IR-DAM')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {
					"linkedInfo": {
						"resourceId": "[parameters('IR-DAM_properties_typeProperties_linkedInfo_resourceId')]",
						"authorizationType": "Rbac"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IR-TW')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {
					"linkedInfo": {
						"resourceId": "[parameters('IR-TW_properties_typeProperties_linkedInfo_resourceId')]",
						"authorizationType": "Rbac"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IRMM')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "integration runtime",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IRfrancescomomesso')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {
					"linkedInfo": {
						"resourceId": "[parameters('IRfrancescomomesso_properties_typeProperties_linkedInfo_resourceId')]",
						"authorizationType": "Rbac"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IRlorenzotomasello')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "Integration runtime",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IRlt')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {
					"linkedInfo": {
						"resourceId": "[parameters('IRlt_properties_typeProperties_linkedInfo_resourceId')]",
						"authorizationType": "Rbac"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IRma')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {
					"linkedInfo": {
						"resourceId": "[parameters('IRma_properties_typeProperties_linkedInfo_resourceId')]",
						"authorizationType": "Rbac"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IRmarcoambrosio')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "Integration Runtime",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IRmarcopozzan')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "Integration runtime",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntimMM')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {
					"linkedInfo": {
						"resourceId": "[parameters('integrationRuntimMM_properties_typeProperties_linkedInfo_resourceId')]",
						"authorizationType": "Rbac"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ir-MB')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {
					"linkedInfo": {
						"resourceId": "[parameters('ir-MB_properties_typeProperties_linkedInfo_resourceId')]",
						"authorizationType": "Rbac"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Crime_DataFlow_fm')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ChicagoCrimesFiles_fm",
								"type": "DatasetReference"
							},
							"name": "CrimeDataFile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_CrimeFileApril_fm",
								"type": "DatasetReference"
							},
							"name": "SinkApril"
						},
						{
							"dataset": {
								"referenceName": "DS_CrimeByDayOfWeek_fm",
								"type": "DatasetReference"
							},
							"name": "SinkDayOfWeek"
						}
					],
					"transformations": [
						{
							"name": "DataTimeExtract"
						},
						{
							"name": "DayOfWeekCount"
						},
						{
							"name": "OnlyApril"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\t{_col0_} as integer,\n\t\t{_col1_} as string,\n\t\tData as string,\n\t\t{_col3_} as string,\n\t\t{_col4_} as string,\n\t\t{_col5_} as string,\n\t\t{_col6_} as string,\n\t\t{_col7_} as string,\n\t\t{_col8_} as boolean,\n\t\t{_col9_} as boolean,\n\t\t{_col10_} as short,\n\t\t{_col11_} as short,\n\t\t{_col12_} as short,\n\t\t{_col13_} as short,\n\t\t{_col14_} as string,\n\t\t{_col15_} as integer,\n\t\t{_col16_} as integer,\n\t\t{_col17_} as short,\n\t\t{_col18_} as string,\n\t\t{_col19_} as double,\n\t\t{_col20_} as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> CrimeDataFile\nCrimeDataFile derive(Data = left(Data,10),\n\t\tTime = right(Data,12)) ~> DataTimeExtract\nDataTimeExtract aggregate(groupBy(DayOfWeek = dayOfWeek(toDate(Data,'yyyy-mm-dd'))),\n\tiucr = count({_col3_})) ~> DayOfWeekCount\nDataTimeExtract filter(month(toDate(Data)) == 4) ~> OnlyApril\nOnlyApril select(mapColumn(\n\t\t{_col0_},\n\t\t{_col1_},\n\t\tData,\n\t\tTime\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['CrimeFileApril_fm.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkApril\nDayOfWeekCount sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['CrimeByDayOfWeek_fm.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkDayOfWeek"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ChicagoCrimesFiles_fm')]",
				"[concat(variables('factoryId'), '/datasets/DS_CrimeFileApril_fm')]",
				"[concat(variables('factoryId'), '/datasets/DS_CrimeByDayOfWeek_fm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_ez')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ChicagoCrimeFiles_ez",
								"type": "DatasetReference"
							},
							"name": "CrimeDataFile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_CrimeFileApril_fm",
								"type": "DatasetReference"
							},
							"name": "SinkApril"
						},
						{
							"dataset": {
								"referenceName": "DS_CrimeByDayOfWeek_fm",
								"type": "DatasetReference"
							},
							"name": "SinkDayOfWeek"
						}
					],
					"transformations": [
						{
							"name": "DataTimeExtract1121212"
						},
						{
							"name": "DayOfWeekCount"
						},
						{
							"name": "OnlyApril"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\t{_col0_} as integer,\n\t\t{_col1_} as string,\n\t\tData as string,\n\t\t{_col3_} as string,\n\t\t{_col4_} as string,\n\t\t{_col5_} as string,\n\t\t{_col6_} as string,\n\t\t{_col7_} as string,\n\t\t{_col8_} as boolean,\n\t\t{_col9_} as boolean,\n\t\t{_col10_} as short,\n\t\t{_col11_} as short,\n\t\t{_col12_} as short,\n\t\t{_col13_} as short,\n\t\t{_col14_} as string,\n\t\t{_col15_} as integer,\n\t\t{_col16_} as integer,\n\t\t{_col17_} as short,\n\t\t{_col18_} as string,\n\t\t{_col19_} as double,\n\t\t{_col20_} as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> CrimeDataFile\nCrimeDataFile derive(Data = left(Data,10),\n\t\tTime = right(Data,12)) ~> DataTimeExtract1121212\nDataTimeExtract1121212 aggregate(groupBy(DayOfWeek = dayOfWeek(toDate(Data,'yyyy-mm-dd'))),\n\tiucr = count({_col3_})) ~> DayOfWeekCount\nDataTimeExtract1121212 filter(month(toDate(Data)) == 4) ~> OnlyApril\nOnlyApril select(mapColumn(\n\t\t{_col0_},\n\t\t{_col1_},\n\t\tData,\n\t\tTime\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['CrimeFileApril_fm.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkApril\nDayOfWeekCount sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['CrimeByDayOfWeek_fm.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkDayOfWeek"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ChicagoCrimeFiles_ez')]",
				"[concat(variables('factoryId'), '/datasets/DS_CrimeFileApril_fm')]",
				"[concat(variables('factoryId'), '/datasets/DS_CrimeByDayOfWeek_fm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ThizAGudFlow_tw')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Billy DataFlow/stop peeking in my folders, plz"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ChicagoCrimeFiles_TW",
								"type": "DatasetReference"
							},
							"name": "CrimeDataFile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_CrimeFile2020",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "DS_CrimeByDayOfWeek_tw",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "DataTimeExtract"
						},
						{
							"name": "DayOfWeekCount"
						},
						{
							"name": "Only2016"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\t{_col0_} as integer,\n\t\t{_col1_} as string,\n\t\tData as string,\n\t\t{_col3_} as string,\n\t\t{_col4_} as string,\n\t\t{_col5_} as string,\n\t\t{_col6_} as string,\n\t\t{_col7_} as string,\n\t\t{_col8_} as boolean,\n\t\t{_col9_} as boolean,\n\t\t{_col10_} as short,\n\t\t{_col11_} as short,\n\t\t{_col12_} as short,\n\t\t{_col13_} as short,\n\t\t{_col14_} as string,\n\t\t{_col15_} as integer,\n\t\t{_col16_} as integer,\n\t\t{_col17_} as short,\n\t\t{_col18_} as string,\n\t\t{_col19_} as double,\n\t\t{_col20_} as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> CrimeDataFile\nCrimeDataFile derive(Data = left(Data,10),\n\t\tTime = right(Data,12)) ~> DataTimeExtract\nDataTimeExtract aggregate(groupBy(DayOfWeek = dayOfWeek(toDate(Data,'yyyy-mm-dd'))),\n\tIUCR = count({_col3_})) ~> DayOfWeekCount\nDataTimeExtract filter(month(toDate(Data)) == 4) ~> Only2016\nOnly2016 select(mapColumn(\n\t\t{_col0_},\n\t\t{_col1_},\n\t\tData,\n\t\t{_col3_},\n\t\tTime\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DS_Crime2016_tw.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1\nDayOfWeekCount sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DS_CrimeByDayOfWeek_tw.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ChicagoCrimeFiles_TW')]",
				"[concat(variables('factoryId'), '/datasets/DS_CrimeFile2020')]",
				"[concat(variables('factoryId'), '/datasets/DS_CrimeByDayOfWeek_tw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ChicagoCrimesFiles_gp",
								"type": "DatasetReference"
							},
							"name": "CrimeDataFile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_CrimeFileApril2020_gp",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "DSCrimeByDOW_gp",
								"type": "DatasetReference"
							},
							"name": "sink222222"
						}
					],
					"transformations": [
						{
							"name": "DateTimeExtract"
						},
						{
							"name": "DateOfWeekCount"
						},
						{
							"name": "Only2016"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\t{_col0_} as integer,\n\t\t{_col1_} as string,\n\t\tData as string,\n\t\t{_col3_} as string,\n\t\t{_col4_} as string,\n\t\t{_col5_} as string,\n\t\t{_col6_} as string,\n\t\t{_col7_} as string,\n\t\t{_col8_} as boolean,\n\t\t{_col9_} as boolean,\n\t\t{_col10_} as short,\n\t\t{_col11_} as short,\n\t\t{_col12_} as short,\n\t\t{_col13_} as short,\n\t\t{_col14_} as string,\n\t\t{_col15_} as integer,\n\t\t{_col16_} as integer,\n\t\t{_col17_} as short,\n\t\t{_col18_} as string,\n\t\t{_col19_} as double,\n\t\t{_col20_} as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> CrimeDataFile\nCrimeDataFile derive(Data = left(Data, 10),\n\t\tTime = right(Data, 12)) ~> DateTimeExtract\nDateTimeExtract aggregate(groupBy(DayOfWeek = dayOfWeek(toDate(Data,'yyyy-mm-dd'))),\n\tiucr = count({_col3_})) ~> DateOfWeekCount\nDateTimeExtract filter(month(toDate(Data))==4) ~> Only2016\nOnly2016 select(mapColumn(\n\t\t{_col0_},\n\t\t{_col1_},\n\t\tData,\n\t\t{_col3_}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DS_CrimeFileApril2020_gp'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1\nDateOfWeekCount sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DSCrimeByDOW_gp'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink222222"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ChicagoCrimesFiles_gp')]",
				"[concat(variables('factoryId'), '/datasets/DS_CrimeFileApril2020_gp')]",
				"[concat(variables('factoryId'), '/datasets/DSCrimeByDOW_gp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1_lt')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DataFlow lt"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ChicagoCrimesFiles_lt",
								"type": "DatasetReference"
							},
							"name": "CrimeDataFile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_CrimeFile2020_lt",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "DS_CrimeByDayOfWeek_lt",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "DataTypeExtract"
						},
						{
							"name": "DayOfWeekCount"
						},
						{
							"name": "Only2016"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\t{_col0_} as integer,\n\t\t{_col1_} as string,\n\t\tData as string,\n\t\t{_col3_} as string,\n\t\t{_col4_} as string,\n\t\t{_col5_} as string,\n\t\t{_col6_} as string,\n\t\t{_col7_} as string,\n\t\t{_col8_} as boolean,\n\t\t{_col9_} as boolean,\n\t\t{_col10_} as short,\n\t\t{_col11_} as short,\n\t\t{_col12_} as short,\n\t\t{_col13_} as short,\n\t\t{_col14_} as string,\n\t\t{_col15_} as integer,\n\t\t{_col16_} as integer,\n\t\t{_col17_} as short,\n\t\t{_col18_} as string,\n\t\t{_col19_} as double,\n\t\t{_col20_} as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> CrimeDataFile\nCrimeDataFile derive(Data = left(Data,10),\n\t\tTime = right(Data,12)) ~> DataTypeExtract\nDataTypeExtract aggregate(groupBy(DayOfWeek = dayOfWeek(toDate(Data,'yyyy-MM-dd'))),\n\tiucr = count({_col3_})) ~> DayOfWeekCount\nDataTypeExtract filter(month(toDate(Data)) == 4) ~> Only2016\nOnly2016 select(mapColumn(\n\t\t{_col0_},\n\t\t{_col1_},\n\t\tData,\n\t\tTime\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['CrimeFile2020_lt.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1\nDayOfWeekCount sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['CrimeByDayOfWeek_lt.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ChicagoCrimesFiles_lt')]",
				"[concat(variables('factoryId'), '/datasets/DS_CrimeFile2020_lt')]",
				"[concat(variables('factoryId'), '/datasets/DS_CrimeByDayOfWeek_lt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_DC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ChicagoCrimeFiles_DC",
								"type": "DatasetReference"
							},
							"name": "CrimeDataFile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_CrimeFileApril_DC",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "DS_CrimeDayOfWeek_DC",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "DataTimeExtract"
						},
						{
							"name": "DayOfWeekCount"
						},
						{
							"name": "OnlyApril"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\t{_col0_} as integer,\n\t\t{_col1_} as string,\n\t\tData as string,\n\t\t{_col3_} as string,\n\t\t{_col4_} as string,\n\t\t{_col5_} as string,\n\t\t{_col6_} as string,\n\t\t{_col7_} as string,\n\t\t{_col8_} as boolean,\n\t\t{_col9_} as boolean,\n\t\t{_col10_} as short,\n\t\t{_col11_} as short,\n\t\t{_col12_} as short,\n\t\t{_col13_} as short,\n\t\t{_col14_} as string,\n\t\t{_col15_} as integer,\n\t\t{_col16_} as integer,\n\t\t{_col17_} as short,\n\t\t{_col18_} as string,\n\t\t{_col19_} as double,\n\t\t{_col20_} as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> CrimeDataFile\nCrimeDataFile derive(Data = left(Data, 10),\n\t\tTime = right(Data, 12)) ~> DataTimeExtract\nDataTimeExtract aggregate(groupBy(DayOfWeek = dayOfWeek(toDate(Data,'yyyy-mm-dd'))),\n\tiucr = count({_col3_})) ~> DayOfWeekCount\nDataTimeExtract filter(month(toDate(Data)) == 4) ~> OnlyApril\nOnlyApril select(mapColumn(\n\t\t{_col0_},\n\t\t{_col1_},\n\t\tData,\n\t\t{_col3_},\n\t\t{_col4_},\n\t\t{_col5_},\n\t\t{_col6_},\n\t\t{_col7_},\n\t\t{_col8_},\n\t\t{_col9_},\n\t\t{_col10_},\n\t\t{_col11_},\n\t\t{_col12_},\n\t\t{_col13_},\n\t\t{_col14_},\n\t\t{_col15_},\n\t\t{_col16_},\n\t\t{_col17_},\n\t\t{_col18_},\n\t\t{_col19_},\n\t\t{_col20_},\n\t\tTime\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['crimeapril_DC.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1\nDayOfWeekCount sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['crimedayofweek_DC.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ChicagoCrimeFiles_DC')]",
				"[concat(variables('factoryId'), '/datasets/DS_CrimeFileApril_DC')]",
				"[concat(variables('factoryId'), '/datasets/DS_CrimeDayOfWeek_DC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_MB')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ChicagoCrimefiles_MB",
								"type": "DatasetReference"
							},
							"name": "CrimeDataFile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Datafilecrime_MB",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "DS_crime",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "DataCrimeExtract"
						},
						{
							"name": "DayOfWeekCount"
						},
						{
							"name": "onlyApril"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\t{_col0_} as integer,\n\t\t{_col1_} as string,\n\t\tdata as string,\n\t\t{_col3_} as string,\n\t\t{_col4_} as string,\n\t\t{_col5_} as string,\n\t\t{_col6_} as string,\n\t\t{_col7_} as string,\n\t\t{_col8_} as boolean,\n\t\t{_col9_} as boolean,\n\t\t{_col10_} as short,\n\t\t{_col11_} as short,\n\t\t{_col12_} as short,\n\t\t{_col13_} as short,\n\t\t{_col14_} as string,\n\t\t{_col15_} as integer,\n\t\t{_col16_} as integer,\n\t\t{_col17_} as short,\n\t\t{_col18_} as string,\n\t\t{_col19_} as double,\n\t\t{_col20_} as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> CrimeDataFile\nCrimeDataFile derive(data = left(data,10),\n\t\ttime = right(data, 12)) ~> DataCrimeExtract\nDataCrimeExtract aggregate(groupBy(DoW = dayOfWeek(toDate(data,'yyyy-mm-dd'))),\n\tucr = count({_col3_})) ~> DayOfWeekCount\nDataCrimeExtract filter(month(toDate(data))==6) ~> onlyApril\nonlyApril select(mapColumn(\n\t\t{_col3_}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string,\n\t\tColumn_15 as string,\n\t\tColumn_16 as string,\n\t\tColumn_17 as string,\n\t\tColumn_18 as string,\n\t\tColumn_19 as string,\n\t\tColumn_20 as string,\n\t\tColumn_21 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DS_onlyJune.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1\nDayOfWeekCount sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['CrimePerDoW.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ChicagoCrimefiles_MB')]",
				"[concat(variables('factoryId'), '/datasets/Datafilecrime_MB')]",
				"[concat(variables('factoryId'), '/datasets/DS_crime')]"
			]
		}
	]
}