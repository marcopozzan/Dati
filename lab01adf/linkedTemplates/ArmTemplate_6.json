{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "lab01adf"
		},
		"LocalDBToAzureDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LocalDBToAzureDB'"
		},
		"filesystem_mm_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'filesystem_mm'"
		},
		"filesystem_mp_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'filesystem_mp'"
		},
		"filesystem_mm_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\Users\\Marco\\Desktop"
		},
		"filesystem_mm_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "Marco"
		},
		"filesystem_mp_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\Users\\info.AzureAD\\Downloads\\colors.csv"
		},
		"filesystem_mp_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "AzureAd\\Info"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/HTTP_Parts_MR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Page",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "FileName"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().FileName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "inventory_id",
						"type": "String"
					},
					{
						"name": "part_num",
						"type": "String"
					},
					{
						"name": "color_id",
						"type": "String"
					},
					{
						"name": "quantity",
						"type": "String"
					},
					{
						"name": "is_spare",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_kj1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"_id": {
							"type": "string"
						},
						"date": {
							"type": "string"
						},
						"dateint": {
							"type": "integer"
						},
						"airport": {
							"type": "string"
						},
						"temp": {
							"type": "integer"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_v3k')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Enh_HTTP_Source_TW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Billy Dataset/this ain't ya folder, bro"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"_id": {
							"type": "string"
						},
						"date": {
							"type": "string"
						},
						"dateint": {
							"type": "integer"
						},
						"airport": {
							"type": "string"
						},
						"temp": {
							"type": "integer"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_vnk')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HTTP Lego",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "inventory_parts.csv.gz"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "inventory_id",
						"type": "String"
					},
					{
						"name": "part_num",
						"type": "String"
					},
					{
						"name": "color_id",
						"type": "String"
					},
					{
						"name": "quantity",
						"type": "String"
					},
					{
						"name": "is_spare",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_wem')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "INVPARTS_HTTP_CONN_ez",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "inventory_parts.csv.gz"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "inventory_id",
						"type": "String"
					},
					{
						"name": "part_num",
						"type": "String"
					},
					{
						"name": "color_id",
						"type": "String"
					},
					{
						"name": "quantity",
						"type": "String"
					},
					{
						"name": "is_spare",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_xem')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HTTP_Weather_MB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"_id": {
							"type": "string"
						},
						"date": {
							"type": "string"
						},
						"dateint": {
							"type": "integer"
						},
						"airport": {
							"type": "string"
						},
						"temp": {
							"type": "integer"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_ym9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "INVPARTS_HTTP_CONN_ez",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "inventory_parts.csv.gz"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "10",
						"type": "String"
					},
					{
						"name": "paddle",
						"type": "String"
					},
					{
						"name": "0",
						"type": "String"
					},
					{
						"name": "13",
						"type": "String"
					},
					{
						"name": "f",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/da_adls_color')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_Inventory_parts",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "legogp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LocalDBToAzureDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('LocalDBToAzureDB_connectionString')]"
				},
				"connectVia": {
					"referenceName": "IR-DAM",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/filesystem_mm')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('filesystem_mm_properties_typeProperties_host')]",
					"userId": "[parameters('filesystem_mm_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('filesystem_mm_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IRMM",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/filesystem_mp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('filesystem_mp_properties_typeProperties_host')]",
					"userId": "[parameters('filesystem_mp_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('filesystem_mp_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IRmarcopozzan",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_MR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "@{pipeline().parameters.FileName}.csv"
							},
							{
								"name": "Destination",
								"value": "lego_mr//@{pipeline().parameters.FileName}.csv//@{pipeline().parameters.FileName}.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": "0"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2
						},
						"inputs": [
							{
								"referenceName": "HTTP_Parts_MR",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@pipeline().parameters.filename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ADL_Parts_MR",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@pipeline().parameters.filename",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"filename": {
						"type": "string",
						"defaultValue": "filename"
					}
				},
				"annotations": [
					"ciao"
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HTTP_Parts_MR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LEgo_HTTP_to_ADLS_Inventoryparts')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_g7u",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "@{pipeline().parameters.FileName}.csv"
							},
							{
								"name": "Destination",
								"value": "legoTW//@{pipeline().parameters.FileName}.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2
						},
						"inputs": [
							{
								"referenceName": "DS_HTTP_inventoryparts_tw",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "@pipeline().parameters.filename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_inventory_parts",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "FileName"
								}
							}
						]
					}
				],
				"parameters": {
					"filename": {
						"type": "string",
						"defaultValue": "FileName"
					}
				},
				"folder": {
					"name": "Pipeline marco"
				},
				"annotations": [
					"copia dati",
					"Lettura dal sito lego"
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lego_HTTP_to_ADLS_inventoryparts_ma')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_y1g",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "@{pipeline().parameters.FileName}.csv"
							},
							{
								"name": "Destination",
								"value": "legoma//@{pipeline().parameters.FileName}.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2
						},
						"inputs": [
							{
								"referenceName": "HTTP_Inventory_parts_ma",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_inventoryparts_ma",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "FileName"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CSV_mp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "filesystem_mp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "colors.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "rgb",
						"type": "String"
					},
					{
						"name": "is_trans",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/filesystem_mp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_LocalSQLWideWorldImporters')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect to your data source store.",
				"linkedServiceName": {
					"referenceName": "LocalDBToAzureDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "StockGroupName",
						"type": "String"
					},
					{
						"name": "LineProfit",
						"type": "Decimal"
					}
				],
				"typeProperties": {
					"tableName": "[[Application].[Cities]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LocalDBToAzureDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedTextma')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "filesystem_mp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/filesystem_mp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Filesystem_onprem_mm')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "filesystem_mm",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "one.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/filesystem_mm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Crime_DataFlow_fm')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ChicagoCrimesFiles_fm",
								"type": "DatasetReference"
							},
							"name": "CrimeDataFile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_CrimeFileApril_fm",
								"type": "DatasetReference"
							},
							"name": "SinkApril"
						},
						{
							"dataset": {
								"referenceName": "DS_CrimeByDayOfWeek_fm",
								"type": "DatasetReference"
							},
							"name": "SinkDayOfWeek"
						}
					],
					"transformations": [
						{
							"name": "DataTimeExtract"
						},
						{
							"name": "DayOfWeekCount"
						},
						{
							"name": "OnlyApril"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\t{_col0_} as integer,\n\t\t{_col1_} as string,\n\t\tData as string,\n\t\t{_col3_} as string,\n\t\t{_col4_} as string,\n\t\t{_col5_} as string,\n\t\t{_col6_} as string,\n\t\t{_col7_} as string,\n\t\t{_col8_} as boolean,\n\t\t{_col9_} as boolean,\n\t\t{_col10_} as short,\n\t\t{_col11_} as short,\n\t\t{_col12_} as short,\n\t\t{_col13_} as short,\n\t\t{_col14_} as string,\n\t\t{_col15_} as integer,\n\t\t{_col16_} as integer,\n\t\t{_col17_} as short,\n\t\t{_col18_} as string,\n\t\t{_col19_} as double,\n\t\t{_col20_} as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> CrimeDataFile\nCrimeDataFile derive(Data = left(Data,10),\n\t\tTime = right(Data,12)) ~> DataTimeExtract\nDataTimeExtract aggregate(groupBy(DayOfWeek = dayOfWeek(toDate(Data,'yyyy-mm-dd'))),\n\tiucr = count({_col3_})) ~> DayOfWeekCount\nDataTimeExtract filter(month(toDate(Data)) == 4) ~> OnlyApril\nOnlyApril select(mapColumn(\n\t\t{_col0_},\n\t\t{_col1_},\n\t\tData,\n\t\tTime\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['CrimeFileApril_fm.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkApril\nDayOfWeekCount sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['CrimeByDayOfWeek_fm.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkDayOfWeek"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_ez')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ChicagoCrimeFiles_ez",
								"type": "DatasetReference"
							},
							"name": "CrimeDataFile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_CrimeFileApril_fm",
								"type": "DatasetReference"
							},
							"name": "SinkApril"
						},
						{
							"dataset": {
								"referenceName": "DS_CrimeByDayOfWeek_fm",
								"type": "DatasetReference"
							},
							"name": "SinkDayOfWeek"
						}
					],
					"transformations": [
						{
							"name": "DataTimeExtract"
						},
						{
							"name": "DayOfWeekCount"
						},
						{
							"name": "OnlyApril"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\t{_col0_} as integer,\n\t\t{_col1_} as string,\n\t\tData as string,\n\t\t{_col3_} as string,\n\t\t{_col4_} as string,\n\t\t{_col5_} as string,\n\t\t{_col6_} as string,\n\t\t{_col7_} as string,\n\t\t{_col8_} as boolean,\n\t\t{_col9_} as boolean,\n\t\t{_col10_} as short,\n\t\t{_col11_} as short,\n\t\t{_col12_} as short,\n\t\t{_col13_} as short,\n\t\t{_col14_} as string,\n\t\t{_col15_} as integer,\n\t\t{_col16_} as integer,\n\t\t{_col17_} as short,\n\t\t{_col18_} as string,\n\t\t{_col19_} as double,\n\t\t{_col20_} as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> CrimeDataFile\nCrimeDataFile derive(Data = left(Data,10),\n\t\tTime = right(Data,12)) ~> DataTimeExtract\nDataTimeExtract aggregate(groupBy(DayOfWeek = dayOfWeek(toDate(Data,'yyyy-mm-dd'))),\n\tiucr = count({_col3_})) ~> DayOfWeekCount\nDataTimeExtract filter(month(toDate(Data)) == 4) ~> OnlyApril\nOnlyApril select(mapColumn(\n\t\t{_col0_},\n\t\t{_col1_},\n\t\tData,\n\t\tTime\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['CrimeFileApril_fm.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkApril\nDayOfWeekCount sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['CrimeByDayOfWeek_fm.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkDayOfWeek"
				}
			},
			"dependsOn": []
		}
	]
}